###############
# LIVING ROOM #
###############

# cube - sides
# 0: up of 'mi' side
# 1: right of 'mi' side
# 2: opposite of 'mi' side
# 3: down of 'mi' side (battery)
# 4: left of 'mi' side
# 5: 'mi' side

- id: Shake_turn_off_living_room_lights
  alias: 'Shake turn off living room lights'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/living_room_cube
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "shake" }}'
  action:
    service: light.turn_off
    entity_id: light.living_room_lights

- id: Tap_toggle_living_room_lights
  alias: 'Tap Toggle living room lights'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/living_room_cube
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "tap" }}'
  action:
    service: light.toggle
    data_template:
      entity_id: >-
        {% if trigger.payload_json.side == 0 %}
          light.tv_lights
        {% elif trigger.payload_json.side == 1 %}
          light.living_room_main
        {% elif trigger.payload_json.side == 4 %}
          light.living_room_table
        {% elif trigger.payload_json.side == 5 %}
          light.living_room_lights
        {% endif %}

- id: Rotate_Right_incr_brightness_living_room_lights
  alias: 'Rotate Right Incr Brightness living room lights'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/living_room_cube
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "rotate_right" }}'
  action:
    service: light.turn_on
    data_template:
      entity_id: >-
        {% if trigger.payload_json.side == 0 %}
          light.tv_lights
        {% elif trigger.payload_json.side == 1 %}
          light.living_room_main
        {% elif trigger.payload_json.side == 4 %}
          light.living_room_table
        {% elif trigger.payload_json.side == 5 %}
          light.living_room_lights
        {% endif %}
      brightness_step_pct: 10

- id: Rotate_Left_decr_brightness_living_room_lights
  alias: 'Rotate Left Decr Brightness living room lights'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/living_room_cube
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "rotate_left" }}'
  action:
    service: light.turn_on
    data_template:
      entity_id: >-
        {% if trigger.payload_json.side == 0 %}
          light.tv_lights
        {% elif trigger.payload_json.side == 1 %}
          light.living_room_main
        {% elif trigger.payload_json.side == 4 %}
          light.living_room_table
        {% elif trigger.payload_json.side == 5 %}
          light.living_room_lights
        {% endif %}
      brightness_step_pct: "-10"

- id: Turn_off_living_room_after_60_minutes_inactive
  alias: 'Turn off living room after 60 minutes inactive'
  trigger:
    platform: state
    entity_id: binary_sensor.living_room_motion_occupancy
    to: 'off'
    for:
      minutes: 60
  action:
    service: light.turn_off
    data:
      entity_id: light.living_room_lights

- id: single_press_toggle_sofa_light
  alias: 'Single Press Toggle Sofa Light'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/sofa_switch
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "single" }}'
  action:
    service: light.toggle
    entity_id: light.sofa

- id: double_press_toggle_tv_light
  alias: 'Double Press Toggle TV Light'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/sofa_switch
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "double" }}'
  action:
    service: light.toggle
    entity_id: light.tv_lights

- id: triple_press_toggle_living_room_main
  alias: 'Triple Press Toggle Living Room Main'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/sofa_switch
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "triple" }}'
  action:
    service: light.toggle
    entity_id: light.living_room_main

- id: quadruple_press_toggle_living_room_table
  alias: 'Quadruple Press Toggle Living Room Table'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/sofa_switch
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "quadruple" }}'
  action:
    service: light.toggle
    entity_id: light.living_room_table

- id: hold_press_turn_off_living_room_lights
  alias: 'Hold Press Turn off living room lights'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/sofa_switch
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "hold" }}'
  action:
    service: light.turn_off
    entity_id: light.living_room_lights


###########
# BEDROOM #
###########

- id: single_press_toggle_bed_lights
  alias: 'Single Press Toggle Bed Lights'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/bedroom_switch
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "single" }}'
  action:
    - service: light.toggle
      entity_id: light.bed_lights
    - condition: and
      conditions:
        - condition: or
          conditions:
            - condition: time
              after: '23:00:00'
            - condition: time
              before: '05:00:00'
        - condition: state
          entity_id: light.bed_lights
          state: 'off'
        - condition: and
          conditions:
            - condition: state
              entity_id: binary_sensor.living_room_motion_occupancy
              state: 'off'
            - condition: state
              entity_id: binary_sensor.shower_room_motion_occupancy
              state: 'off'
            - condition: state
              entity_id: binary_sensor.kitchen_motion_occupancy
              state: 'off'
    - service: light.turn_off
      entity_id: group.all_lights

- id: Hold_Press_turn_on_light_orange_1percent
  alias: 'Hold Press Turn ON Light (Orange - 1 percent)'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/bedroom_switch
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "hold" }}'
  action:
    - service: light.turn_on
      entity_id: light.bed_lights
      data:
        brightness: 1
        rgb_color: [255,115,0]
    - condition: and
      conditions:
        - condition: or
          conditions:
            - condition: time
              after: '23:00:00'
            - condition: time
              before: '05:00:00'
        - condition: and
          conditions:
            - condition: state
              entity_id: binary_sensor.living_room_motion_occupancy
              state: 'off'
            - condition: state
              entity_id: binary_sensor.shower_room_motion_occupancy
              state: 'off'
            - condition: state
              entity_id: binary_sensor.kitchen_motion_occupancy
              state: 'off'
    - service: light.turn_off
      entity_id: group.all_lights

- id: Double_press_turn_on_light_(orange_30percent)
  alias: 'Double Press Turn ON Light (Orange - 30 percent)'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/bedroom_switch
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "double" }}'
  action:
    service: light.turn_on
    entity_id: light.bed_lights
    data:
      brightness: 76
      rgb_color: [255,165,0]

- id: Triple_Press_turn_on_light_white_100percent
  alias: 'Triple Press Turn ON Light (White - 100 percent)'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/bedroom_switch
  condition:
    - condition: template
      value_template: '{{ trigger.payload_json.action == "triple" }}'
  action:
    service: light.turn_on
    entity_id: light.bed_lights
    data:
      brightness: 255
      rgb_color: [255,255,255]

#- id: flip90_cube_toggle_desk_light
#  alias: 'Flip 90 Cube Toggle Desk Light'
#  trigger:
#    platform: mqtt
#    topic: zigbee2mqtt/living_room_cube
#  condition:
#    - condition: template
#      value_template: '{{ trigger.payload_json.action == "flip90" }}'
#  action:
#    service: light.toggle
#    entity_id: light.ludovics_desk

###############
# Shower Room #
###############

- id: Motion_detected_turn_on_shower_room_light
  alias: 'Motion Detected Turn ON Shower Room Light'
  trigger:
    platform: state
    entity_id: binary_sensor.shower_room_motion_occupancy
    from: 'off'
    to: 'on'
  action:
    service: light.turn_on
    data:
      entity_id: light.shower_room

- id: No_motion_for_2_minutes_turn_off_shower room light
  alias: 'No Motion For 2 Minutes Turn OFF Shower Room Light'
  trigger:
    platform: state
    entity_id: binary_sensor.shower_room_motion_occupancy
    from: 'on'
    to: 'off'
    for:
      minutes: 2
  condition:
    - condition: state
      entity_id: binary_sensor.shower_room_door_contact
      state: 'on'
  action:
    service: light.turn_off
    data:
      entity_id: light.shower_room

- id: 15_minutes_shower_warning
  alias: '15 minutes shower warning'
  trigger:
    platform: state
    entity_id: binary_sensor.shower_room_door_contact
    to: 'off'
    for:
      minutes: 15
  action:
    service: yeelight.start_flow
    data:
      entity_id: light.shower_room
      count: 15
      action: recover
      transitions:
        - RGBTransition: [255, 0, 0, 200, 100]
        - RGBTransition: [255, 0, 0, 400, 10]
        - SleepTransition: [200]


###########
# KITCHEN #
###########

- id: turn_on_kitchen_switch_when_motion_detected
  alias: 'Turn on kitchen switch when motion detected'
  trigger:
    platform: state
    entity_id: binary_sensor.kitchen_motion_occupancy
    to: 'on'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.thin_power_switch

- id: turn_off_kitchen_switch_when_no_motion_for_a_minute
  alias: 'Turn off kitchen switch when no motion for a minute'
  trigger:
    platform: state
    entity_id: binary_sensor.kitchen_motion_occupancy
    from: 'on'
    to: 'off'
    for:
      minutes: 1
  action:
    service: switch.turn_off
    data:
      entity_id: switch.thin_power_switch


############
# TELEGRAM #
############

#- id: Send_daily_report_at_8am
#  alias: 'Send Daily Report At 8am'
#  trigger:
#    platform: time
#    at: '08:00:00'
#  action:
#    service: notify.telegram
#    data_template:
#      message: |
#        早安！
#        Today is {{ now().strftime("%B %d, %Y") }}.
#        Currently it is {{ states.sensor.dark_sky_summary.state.lower() }}, {{ states.sensor.dark_sky_temperature.state  }}°C with {{ states.sensor.dark_sky_humidity.state | int }}% humidity and AQI is {{ states.sensor.waqi_zhongshan_taiwan.attributes.pm_2_5 }} pm2.5 Taipei.
#        The weather will be {{ states.sensor.dark_sky_hourly_summary.state.lower() }}
#        You can expect temperatures between {{ states.sensor.dark_sky_daily_low_temperature.state }} and {{ states.sensor.dark_sky_daily_high_temperature.state }} degrees.
#        Have a nice day :)

#- id: Send_logs
#  alias: 'Send Logs'
#  trigger:
#    platform: event
#    event_type: telegram_command
#    event_data:
#      command: /logs
#  condition: []
#  action:
#    service: telegram_bot.send_document
#    data:
#      target:
#        - !secret chat_id_telegram_admin
#      file: !secret doc_log
#      disable_notification: true
