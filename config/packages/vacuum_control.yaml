# Control Panel
# Automatic Control
input_boolean:
  vacuum_schedule_weekdays:
    name: Enabled
    icon: mdi:toggle-switch
  vacuum_schedule_weekend:
    name: Enabled
    icon: mdi:toggle-switch

input_number:
  vacuum_schedule_weekdays_hour:
    name: Hour
    icon: mdi:clock-outline
    min: 0
    max: 23
    step: 1
  vacuum_schedule_weekdays_minute:
    name: Minute
    icon: mdi:clock-outline
    min: 0
    max: 45
    step: 15
  vacuum_schedule_weekend_hour:
    name: Hour
    icon: mdi:clock-outline
    min: 0
    max: 23
    step: 1
  vacuum_schedule_weekend_minute:
    name: Minute
    icon: mdi:clock-outline
    min: 0
    max: 45
    step: 15

#input_datetime:
#  only_time:
#    name: TEST
#    has_date: false
#    has_time: true

group:
  vacuum_schedule_weekdays:
    name: Georgie's Schedule (Weekdays)
    entities:
      - sensor.vacuum_schedule_weekdays_template
      - input_boolean.vacuum_schedule_weekdays
      - input_number.vacuum_schedule_weekdays_hour
      - input_number.vacuum_schedule_weekdays_minute
      - input_datetime.only_time
  vacuum_schedule_weekend:
    name: Georgie's Schedule (Weekend)
    entities:
      - sensor.vacuum_schedule_weekend_template
      - input_boolean.vacuum_schedule_weekend
      - input_number.vacuum_schedule_weekend_hour
      - input_number.vacuum_schedule_weekend_minute

sensor:
  - platform: template
    sensors:
      vacuum_schedule_weekdays_template:
        friendly_name: 'Time'
        icon_template: "{{ 'mdi:timer' if is_state('input_boolean.vacuum_schedule_weekdays', 'on') else 'mdi:close-circle' }}"
        value_template: '{{ "%0.02d:%0.02d" | format(states("input_number.vacuum_schedule_weekdays_hour") | int, states("input_number.vacuum_schedule_weekdays_minute") | int) }}'
      vacuum_schedule_weekend_template:
        friendly_name: 'Time'
        icon_template: "{{ 'mdi:timer' if is_state('input_boolean.vacuum_schedule_weekend', 'on') else 'mdi:close-circle' }}"
        value_template: '{{ "%0.02d:%0.02d" | format(states("input_number.vacuum_schedule_weekend_hour") | int, states("input_number.vacuum_schedule_weekend_minute") | int) }}'


automation:
  - id: vacuum_schedule
    alias: 'Vacuum Schedule'
    trigger:
      - platform: time_pattern
        minutes: '/15'
        seconds: 00
    condition:
      condition: or
      conditions:
        - condition: and
          conditions:
          - condition: template
            value_template: '{{ now().time().strftime("%H:%M") == states.sensor.vacuum_schedule_weekdays_template.state }}'
          - condition: state
            entity_id: input_boolean.vacuum_schedule_weekdays
            state: 'on'
          - condition: state
            entity_id: binary_sensor.workday_sensor
            state: 'on'
        - condition: and
          conditions:
          - condition: template
            value_template: '{{ now().time().strftime("%H:%M") == states.sensor.vacuum_schedule_weekend_template.state }}'
          - condition: state
            entity_id: input_boolean.vacuum_schedule_weekend
            state: 'on'
          - condition: state
            entity_id: binary_sensor.workday_sensor
            state: 'off'
    action:
      - service: vacuum.start
        entity_id: vacuum.robot_vacuum


  - id: air_purifier_on_when_vacuuming
    alias: 'Air Purifier on when vacuuming'
    trigger:
      - platform: state
        entity_id: vacuum.robot_vacuum
        to: 'cleaning'
    action:
      - service: fan.turn_on
        entity_id: fan.air_purifier

  - id: air_purifier_off_when_vacuuming
    alias: 'Air Purifier off when vacuuming'
    trigger:
      - platform: state
        entity_id: vacuum.robot_vacuum
        from: 'returning'
        to: 'docked'
    action:
      - service: fan.turn_off
        entity_id: fan.air_purifier
